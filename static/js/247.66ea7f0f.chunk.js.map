{"version":3,"file":"static/js/247.66ea7f0f.chunk.js","mappings":"4PAIaA,EAAO,WAClB,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAWR,IATAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,WAAMH,GAAN,wFACFI,EAAAA,EAAAA,IAAaJ,GADX,OACfF,EADe,OAErBC,EAAQD,EAAKA,MAFQ,2CAAH,sDAKpBK,EAAeH,EAChB,GAAE,CAACA,IAECF,EAAL,CAWA,OACE,0BACE,wBACGA,EAAKO,KAAI,gBAVMC,EAUHN,EAAH,EAAGA,GAAIO,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACR,2BACE,gBAAKC,KAZOJ,EAYYG,EAXlB,OAAVH,EACK,IAEH,GAAN,OAAUK,EAAAA,IAAV,OAAoBL,IAQ2BM,IAAI,MAC3C,uBAAIL,KACJ,uBAAIC,MAHGR,EADD,OAZf,CAsBF,C,uNCtCYW,EAAU,kCACjBE,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,oGACFD,EAAAA,EAAAA,IAAA,uBAAkC,CACvDE,OAAQ,CACNC,QAASJ,KAHY,cACnBK,EADmB,yBAMlBA,EAASC,MANS,2CAAH,qDASXC,EAAe,mCAAG,WAAMpB,GAAN,uFACNc,EAAAA,EAAAA,IAAA,gBAAmBd,EAAnB,KAA0B,CAC/CgB,OAAQ,CACNC,QAASJ,KAHgB,cACvBK,EADuB,yBAMtBA,EAASC,MANa,2CAAH,sDASff,EAAY,mCAAG,WAAMJ,GAAN,uFACHc,EAAAA,EAAAA,IAAA,gBAAmBd,EAAnB,aAAkC,CACvDgB,OAAQ,CACNC,QAASJ,KAHa,cACpBK,EADoB,yBAMnBA,EAASC,MANU,2CAAH,sDASZE,EAAc,mCAAG,WAAMrB,GAAN,uFACLc,EAAAA,EAAAA,IAAA,gBAAmBd,EAAnB,aAAkC,CACvDgB,OAAQ,CACNC,QAASJ,KAHe,cACtBK,EADsB,yBAMrBA,EAASC,MANY,2CAAH,sDASdG,EAAc,mCAAG,WAAMC,GAAN,uFACLT,EAAAA,EAAAA,IAAA,gBAA2B,CAChDE,OAAQ,CACNO,MAAAA,EACAN,QAASJ,KAJe,cACtBK,EADsB,yBAOrBA,EAASC,MAPY,2CAAH,qD","sources":["components/Cast/Cast.jsx","servise/tmdbAPI.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast, IMG_URL } from 'servise/tmdbAPI';\n\nexport const Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchMovieCast = async id => {\n      const cast = await getMovieCast(id);\n      setCast(cast.cast);\n    };\n\n    fetchMovieCast(id);\n  }, [id]);\n\n  if (!cast) {\n    return;\n  }\n\n  const getActorImage = image => {\n    if (image === null) {\n      return '#';\n    }\n    return `${IMG_URL}${image}`;\n  };\n\n  return (\n    <div>\n      <ul>\n        {cast.map(({ id, name, character, profile_path }) => (\n          <li key={id}>\n            <img src={getActorImage(profile_path)} alt=\"\" />\n            <p>{name}</p>\n            <p>{character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","// https://api.themoviedb.org/3/movie/550?api_key=7770a554235a470dd8487676c4d97407\nimport axios from 'axios';\n\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst API_KEY = '7770a554235a470dd8487676c4d97407';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/week?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(`movie/${id}?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(`movie/${id}/credits?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const getMovieReview = async id => {\n  const response = await axios.get(`movie/${id}/reviews?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const getSearchMovie = async query => {\n  const response = await axios.get(`search/movie?`, {\n    params: {\n      query,\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n"],"names":["Cast","useState","cast","setCast","id","useParams","useEffect","fetchMovieCast","getMovieCast","map","image","name","character","profile_path","src","IMG_URL","alt","API_KEY","axios","getTrending","params","api_key","response","data","getMovieDetails","getMovieReview","getSearchMovie","query"],"sourceRoot":""}