{"version":3,"file":"static/js/186.bc2e2864.chunk.js","mappings":"+PAAaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OACE,wBACGA,EAAQC,KAAI,SAAAC,GAAM,OACjB,yBACE,uBAAIA,EAAOC,WADJD,EAAOE,GADC,KAOxB,ECLYC,EAAU,WACrB,OAA6BC,EAAAA,EAAAA,UAAS,MAAtC,eAAON,EAAP,KAAgBO,EAAhB,KACQH,GAAOI,EAAAA,EAAAA,MAAPJ,GAUR,IARAK,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,WAAMN,GAAN,wFACCO,EAAAA,EAAAA,IAAeP,GADhB,OACfJ,EADe,OAErBO,EAAUP,EAAQY,SAFG,2CAAH,sDAIpBF,EAAeN,EAChB,GAAE,CAACA,IAECJ,EAIL,OACE,yBACGA,EAAQa,OAAS,GAChB,SAACd,EAAD,CAAaC,QAASA,IAEtB,qBAIP,C,uNC3BYc,EAAU,kCACjBC,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,oGACFD,EAAAA,EAAAA,IAAA,uBAAkC,CACvDE,OAAQ,CACNC,QAASJ,KAHY,cACnBK,EADmB,yBAMlBA,EAASC,MANS,2CAAH,qDASXC,EAAe,mCAAG,WAAMlB,GAAN,uFACNY,EAAAA,EAAAA,IAAA,gBAAmBZ,EAAnB,KAA0B,CAC/Cc,OAAQ,CACNC,QAASJ,KAHgB,cACvBK,EADuB,yBAMtBA,EAASC,MANa,2CAAH,sDASfE,EAAY,mCAAG,WAAMnB,GAAN,uFACHY,EAAAA,EAAAA,IAAA,gBAAmBZ,EAAnB,aAAkC,CACvDc,OAAQ,CACNC,QAASJ,KAHa,cACpBK,EADoB,yBAMnBA,EAASC,MANU,2CAAH,sDASZV,EAAc,mCAAG,WAAMP,GAAN,uFACLY,EAAAA,EAAAA,IAAA,gBAAmBZ,EAAnB,aAAkC,CACvDc,OAAQ,CACNC,QAASJ,KAHe,cACtBK,EADsB,yBAMrBA,EAASC,MANY,2CAAH,sDASdG,EAAc,mCAAG,WAAMC,GAAN,uFACLT,EAAAA,EAAAA,IAAA,gBAA2B,CAChDE,OAAQ,CACNO,MAAAA,EACAN,QAASJ,KAJe,cACtBK,EADsB,yBAOrBA,EAASC,MAPY,2CAAH,qD","sources":["components/ReviewsList/ReviewsList.jsx","components/Reviews/Reviews.jsx","servise/tmdbAPI.js"],"sourcesContent":["export const ReviewsList = ({ reviews }) => {\n  return (\n    <ul>\n      {reviews.map(review => (\n        <li key={review.id}>\n          <p>{review.content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { getMovieReview } from 'servise/tmdbAPI';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewsList } from 'components/ReviewsList/ReviewsList';\n\nexport const Reviews = () => {\n  const [reviews, setReview] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchMovieCast = async id => {\n      const reviews = await getMovieReview(id);\n      setReview(reviews.results);\n    };\n    fetchMovieCast(id);\n  }, [id]);\n\n  if (!reviews) {\n    return;\n  }\n\n  return (\n    <div>\n      {reviews.length > 0 ? (\n        <ReviewsList reviews={reviews} />\n      ) : (\n        'Rewiews not found'\n      )}\n    </div>\n  );\n};\n","// https://api.themoviedb.org/3/movie/550?api_key=7770a554235a470dd8487676c4d97407\nimport axios from 'axios';\n\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst API_KEY = '7770a554235a470dd8487676c4d97407';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/week?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(`movie/${id}?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(`movie/${id}/credits?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const getMovieReview = async id => {\n  const response = await axios.get(`movie/${id}/reviews?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const getSearchMovie = async query => {\n  const response = await axios.get(`search/movie?`, {\n    params: {\n      query,\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n"],"names":["ReviewsList","reviews","map","review","content","id","Reviews","useState","setReview","useParams","useEffect","fetchMovieCast","getMovieReview","results","length","IMG_URL","API_KEY","axios","getTrending","params","api_key","response","data","getMovieDetails","getMovieCast","getSearchMovie","query"],"sourceRoot":""}