{"version":3,"file":"static/js/104.3c2745c6.chunk.js","mappings":"4OAAaA,EAAS,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAMvB,OACE,kBAAMC,SANa,SAAAC,GACnBA,EAAEC,iBACFH,EAAME,EAAEE,OAAOC,SAASC,MAAMC,MAC/B,EAGC,WACE,kBAAOC,KAAK,QAAQC,KAAK,UACzB,mBAAQA,KAAK,SAAb,sBAGL,E,2BCVYC,EAAa,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAMG,KAAI,SAAAC,GAAI,OACb,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAMP,GAA/C,SACGG,EAAKK,kBAFDL,EAAKE,GADD,KASpB,ECoBD,EA7Be,WAAO,IAAD,EACnB,GAA0BI,EAAAA,EAAAA,UAAS,MAAnC,eAAOV,EAAP,KAAcW,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMnB,EAAK,UAAGkB,EAAaE,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WACR,GAAc,KAAVrB,EAAJ,CAGA,IAAMsB,EAAgB,mCAAG,WAAMtB,GAAN,wFACFuB,EAAAA,EAAAA,IAAevB,GADb,OACjBwB,EADiB,OAEvBR,EAASQ,EAAOC,SAFO,2CAAH,sDAKtBH,EAAiBtB,EANhB,CAOF,GAAE,CAACA,IAMJ,OACE,6BACE,SAACP,EAAD,CAAQC,MANK,SAAAO,GACfkB,EAA0B,KAAVlB,EAAe,CAAC,EAAI,CAAED,MAAOC,GAC9C,IAKII,GAASL,IAAS,SAACI,EAAD,CAAYC,MAAOA,MAG3C,C","sources":["components/Search/Search.jsx","components/SearchList/SearchList.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["export const Search = ({ onSet }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSet(e.target.elements.query.value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input name=\"query\" type=\"text\" />\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n","import { Link, useLocation } from 'react-router-dom';\n\nexport const SearchList = ({ films }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {films.map(film => (\n        <li key={film.id}>\n          <Link to={`/movies/${film.id}`} state={{ from: location }}>\n            {film.original_title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { Search } from 'components/Search/Search';\nimport { useEffect, useState } from 'react';\nimport { getSearchMovie } from 'servise/tmdbAPI';\nimport { SearchList } from 'components/SearchList/SearchList';\n\nconst Movies = () => {\n  const [films, setFilms] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    const fetchSearchMovie = async query => {\n      const movies = await getSearchMovie(query);\n      setFilms(movies.results);\n    };\n\n    fetchSearchMovie(query);\n  }, [query]);\n\n  const setQuery = value => {\n    setSearchParams(value === '' ? {} : { query: value });\n  };\n\n  return (\n    <main>\n      <Search onSet={setQuery} />\n      {films && query && <SearchList films={films} />}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["Search","onSet","onSubmit","e","preventDefault","target","elements","query","value","name","type","SearchList","films","location","useLocation","map","film","to","id","state","from","original_title","useState","setFilms","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchSearchMovie","getSearchMovie","movies","results"],"sourceRoot":""}