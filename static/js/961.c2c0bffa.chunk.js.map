{"version":3,"file":"static/js/961.c2c0bffa.chunk.js","mappings":"4QAMaA,EAAe,WAAO,IAAD,QAC1BC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAWR,IATAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,WAAMH,GAAN,wFACJI,EAAAA,EAAAA,IAAgBJ,GADZ,OAClBF,EADkB,OAExBC,EAASD,GAFe,2CAAH,sDAKvBK,EAAkBH,EACnB,GAAE,CAACA,IAECF,EAAL,CAIA,IAAQO,EAAgEP,EAAhEO,eAAgBC,EAAgDR,EAAhDQ,aAAcC,EAAkCT,EAAlCS,SAAUC,EAAwBV,EAAxBU,OAAQC,EAAgBX,EAAhBW,YAMlDC,EAHGF,EAAOG,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAGKC,KAAK,MAC7BC,EAAM,yCAAqCN,GAEjD,OACE,4BACE,SAAC,KAAD,CAAMO,GAAE,oBAAErB,EAASsB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAlC,sBACA,gBAAKC,IAAKJ,EAAQK,IAAI,MACtB,wBAAKf,KACL,2BACE,yBACE,uCACc,IACXgB,OAAOC,YAA2B,GAAfhB,GAAmBiB,WAAWC,MAAM,EAAG,IAF7D,UAKF,2BACE,qCACA,uBAAIjB,QAEN,2BACE,mCACA,uBAAIG,WAIR,2BACE,yBACE,SAAC,KAAD,CAAMM,GAAG,OAAOC,MAAO,CAAEC,KAAI,UAAEvB,EAASsB,aAAX,aAAE,EAAgBC,MAA/C,qBAIF,yBACE,SAAC,KAAD,CAAMF,GAAG,UAAUC,MAAO,CAAEC,KAAI,UAAEvB,EAASsB,aAAX,aAAE,EAAgBC,MAAlD,2BAKJ,SAAC,EAAAO,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,QA9CL,CAkDF,C,uNCrEYC,EAAU,kCACjBC,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,oGACFD,EAAAA,EAAAA,IAAA,uBAAkC,CACvDE,OAAQ,CACNC,QAASJ,KAHY,cACnBK,EADmB,yBAMlBA,EAASC,MANS,2CAAH,qDASX9B,EAAe,mCAAG,WAAMJ,GAAN,uFACN6B,EAAAA,EAAAA,IAAA,gBAAmB7B,EAAnB,KAA0B,CAC/C+B,OAAQ,CACNC,QAASJ,KAHgB,cACvBK,EADuB,yBAMtBA,EAASC,MANa,2CAAH,sDASfC,EAAY,mCAAG,WAAMnC,GAAN,uFACH6B,EAAAA,EAAAA,IAAA,gBAAmB7B,EAAnB,aAAkC,CACvD+B,OAAQ,CACNC,QAASJ,KAHa,cACpBK,EADoB,yBAMnBA,EAASC,MANU,2CAAH,sDASZE,EAAc,mCAAG,WAAMpC,GAAN,uFACL6B,EAAAA,EAAAA,IAAA,gBAAmB7B,EAAnB,aAAkC,CACvD+B,OAAQ,CACNC,QAASJ,KAHe,cACtBK,EADsB,yBAMrBA,EAASC,MANY,2CAAH,sDASdG,EAAc,mCAAG,WAAMC,GAAN,uFACLT,EAAAA,EAAAA,IAAA,gBAA2B,CAChDE,OAAQ,CACNO,MAAAA,EACAN,QAASJ,KAJe,cACtBK,EADsB,yBAOrBA,EAASC,MAPY,2CAAH,qD","sources":["pages/MovieDetails/MovieDetails.jsx","servise/tmdbAPI.js"],"sourcesContent":["import { useLocation, useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieDetails } from 'servise/tmdbAPI';\nimport { Link, Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\n\nexport const MovieDetails = () => {\n  const location = useLocation();\n  const [movie, setMovie] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchMovieDetails = async id => {\n      const movie = await getMovieDetails(id);\n      setMovie(movie);\n    };\n\n    fetchMovieDetails(id);\n  }, [id]);\n\n  if (!movie) {\n    return;\n  }\n\n  const { original_title, vote_average, overview, genres, poster_path } = movie;\n\n  const getGenres = () => {\n    return genres.map(genre => genre.name);\n  };\n\n  const genreList = getGenres().join(', ');\n  const poster = `https://image.tmdb.org/t/p/w500${poster_path}`;\n\n  return (\n    <div>\n      <Link to={location.state?.from ?? '/'}>Go back</Link>\n      <img src={poster} alt=\"\" />\n      <h2>{original_title}</h2>\n      <ul>\n        <li>\n          <p>\n            User score:{' '}\n            {Number.parseFloat((vote_average * 10).toString().slice(0, 3))}%\n          </p>\n        </li>\n        <li>\n          <p>Overview</p>\n          <p>{overview}</p>\n        </li>\n        <li>\n          <p>Genres</p>\n          <p>{genreList}</p>\n        </li>\n      </ul>\n\n      <ul>\n        <li>\n          <Link to=\"cast\" state={{ from: location.state?.from }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: location.state?.from }}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n","// https://api.themoviedb.org/3/movie/550?api_key=7770a554235a470dd8487676c4d97407\nimport axios from 'axios';\n\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst API_KEY = '7770a554235a470dd8487676c4d97407';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/week?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(`movie/${id}?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(`movie/${id}/credits?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const getMovieReview = async id => {\n  const response = await axios.get(`movie/${id}/reviews?`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const getSearchMovie = async query => {\n  const response = await axios.get(`search/movie?`, {\n    params: {\n      query,\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n"],"names":["MovieDetails","location","useLocation","useState","movie","setMovie","id","useParams","useEffect","fetchMovieDetails","getMovieDetails","original_title","vote_average","overview","genres","poster_path","genreList","map","genre","name","join","poster","to","state","from","src","alt","Number","parseFloat","toString","slice","Suspense","fallback","IMG_URL","API_KEY","axios","getTrending","params","api_key","response","data","getMovieCast","getMovieReview","getSearchMovie","query"],"sourceRoot":""}